// drag and drop is incredibly buggy...
//    useLayoutEffect(() => {
//        d3.selectAll<SVGCircleElement,Vertex>("circle")
//            .call(
//                d3.drag<SVGCircleElement,Vertex>()
//                .on("start", (event,vertex) => {
//                    if (simulation === undefined) return
//                    if (!event.active) simulation.alphaTarget(0.3).restart();
//                    vertex.fx = vertex.x;
//                    vertex.fy = vertex.y;
//                })
//                .on("drag", (event, vertex)=>{
//                    vertex.fx = event.x;
//                    vertex.fy = event.y;
//                })
//            )
//    }, [simulation])


// Tab indentation is more complicated than this...
// if (!event.shiftKey) {
//     console.log(selectedLine)
//     setText(x => {
//         console.log(`=> '${x}'`)
//         const result = x.split(/\r?\n/).map((line, lineIndex) => lineIndex + 1 === selectedLine ? line + "    " : line).join("\n")
//         console.log(`<= '${result}'`)
//         return result
//     })
//     setIndentation(x => x + indentSize)
// } else {
//     setText(x => x.replace(new RegExp(`\\s{0,${indentSize}}$`), ""))
//     setIndentation(x => x + indentSize)
// }


// overlay not needed any more:
// nodeGroup.selectAll<SVGCircleElement, SimVertex>('.drag-overlay')
//     .data(v)
//     .join('circle')
//     .attr('class', 'drag-overlay')
//     .attr('cx', u => u.x ?? null)
//     .attr('cy', u => u.y ?? null)
//     .attr('r', u => u.radius)
//     .attr('stroke', 'transparent')
//     .attr('fill', 'transparent')
//     .call(options?.dragHandler ?? (() => {}))
//     .on('mousemove', function (event) {
//         const lines = graph.tooltip.split(/\r?\n/).map(x => x.trim())
//         const [x, y] = d3.pointer(event, this)
//         const tooltipGroup = svg.selectAll('#tooltip').data([null]).join('g').attr('id', 'tooltip')
//         tooltipGroup.selectAll('rect').data([null]).join('rect')
//         // TODO rect autosize + background
//         tooltipGroup.selectAll('text').data([null]).join('text')
//             .style('font-family', 'monospace')
//             .attr('transform', `translate(${x + 30},${y})`)
//             .selectAll('tspan').data(lines).join('tspan')
//             .attr('x', 0).attr('dy', '1.25em')
//             .text(line => line)
//     })
//     .on('mouseleave', () => {
//         svg.select('#tooltip').remove()
//     })